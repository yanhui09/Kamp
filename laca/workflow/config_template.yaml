# This file should contain everything to configure the workflow on a global scale.
basecalled_dir: 
database_dir: 
demultiplexed_dir:

threads:
  normal: 2 # common jobs
  large: 6 # threads-dependent jobs

# Pooling samples for denoise [TRUE|FALSE]
pool: True
##############################################################
# Demultiplex [Nanopore]
demuxer: guppy # guppy | minibar 
guppy:
  barcode_kits: "SQK16S-GXO192"
minibar:
  args: "-p 0.75 -l 160"
nreads_m: 1000 # rm barcoded samples in shallow sequencing
##############################################################
# Quality control
# Subsample raw reads if with inadequate memory
subsample: True

# Quality filtering
seqkit:
  n: 5000 # subsampling number [int]
  min_qual: 7
  min_len: 800
  max_len: 1500

# trim primers
trim: True
# order matters
fprimer:
  27Fa: "AGAGTTTGATYMTGGCTYAG"
  27Fb: "AGGGTTCGATTCTGGCTCAG"
  338Fa: "ACWCCTACGGGWGGCAGCAG"
  338Fb: "GACTCCTACGGGAGGCWGCAG"

rprimer: 
  1540R: "TACGGYTACCTTGTTACGACT"
  1391R: "GACGGGCGGTGTGTRCA"

cutadapt:
  max_errors: 0.2
  min_overlap: 6

##############################################################
# kmer binning
kmerbin: True
bin_mem: 50 # GB
# Bool, whether to bin or not; TRUE is highly recommened in clustCon mode,
# considering the massive pairwise alignments inside.

# To mitagate the memory bottleneck of umap in pooling mode,
# batch mode is induced. kmer binning is done in batches and
# all unbinned reads will be re-collected for re-binning. 
# It's an alternative for users with limited computing resources.
batch_size: auto
# zero or negative values to bin all reads together; 
# use manual postive value to bin in batches due to limited rams 
# or choose auto estimation with "auto"
kmer_size: 5
# umap reduction and hdbscan cluster
umap:
  n_neighbors: 15 # Increase this for global structure
  min_dist: 0.1 # Lower this to increase density for clustering (0.0, 0.99)
  metric: cosine
  n_components: 2 # n reduced dimensions passed to hdbscan clustering
hdbscan:
  min_bin_size: 50 # Define the smallest size to bin
  min_samples: 50 # Increase this for more conservative clustering - more points as noise
  epsilon: 0.5 # Lower this for more micro-clusters

##############################################################
# cluster within kmer bins
# mode for cluster consensus [ClustCon|isONclustCon|isONcorCon]
# ClustCon: cluster based on pairwise alignment with minimap2 [orignal method in https://genome.cshlp.org/content/30/3/437]
# isONclustCon: NGSpeciesID on kmer clusters (divergent similarity)
# isONcorCon: isONclust followed by isONcorrect/IsoCon (close similarity)
cluster:
  #- isONclustCon # the first is the final kOTUs
  #- kmerCon 
  #- isONcorCon # sinlge target/amplification region
  #- clustCon 
  #- umiCon
min_cluster_size: 20

ava2clust: # [clustCon]
  min_score_frac: 0.8
  max_recursion: -1 # non-zero value to override python's max recursion depth

isONclust:
  # --ont: --k13 --w20; --isoseq: --k15 --w50
  k: 13
  w: 20

spoa:
  l: 1 # global alignment (1) for multi-primer amplicons; local alignment (0) for common amplicons
  r: 0
  g: -2

minimap2:
  # choose by reads type; https://github.com/lh3/minimap2
  # ont: ava-ont; pb: ava-pb
  x_ava: ava-ont # [clustCon]
  # ont: map-ont; pb-clr: map-pb, pb-css: asm20 (< v2.18), map-hifi (> v2.19)
  x_map: map-ont # [polish & quant]
  # maximally allowed gap-compressed per-base sequence divergence as valid mapping, 
  # filter mismappings due to partial sequence similarity when creating abundance matrix
  max_de: 0.075 # [quant]

racon:
  iter: 2
  m: 8
  x: -6
  g: -8
  w: 500
  
medaka:
  iter: 1 
  m: r941_min_hac_g507

# run isONcorrect before IsoCon
isONcor: True # [isONcorCon]

IsoCon:
  min_candidates: 2

##############################################################
# create abundance matrix by sequence id or minimap2 mapping, 
# seqid | minimap2, the first is the final
quant: 
  - seqid
  #- minimap2 
# Filter chimera with qiime2-vesearch [uchime-denovo] 
chimeraF: False
##############################################################
# Taxonomy assignment
classifier:
  - q2blast # the first to be the final
  #- kraken2
  #- mmseqs2

mmseqs2:
  min_id: 0.99
  c: 0.9 # the fraction of aligned residues
  taxdb: SILVA # predefined taxonomy database name in `mmseqs databases`; The provided NT database do not have taxonomy info yet.
  # make a custom seqTaxDB using local blast databases;
  blastdb_alias: "refseq_rna" # alias for blast database; leave this as empty string [""] if you want to use the default database by mmseqs2
  lca: 4 #LCA Mode 1: single search LCA, 2/3: approximate 2bLCA (not supported in NT-NT match ), 4: top hit [4]

kraken2:
  # Prebuilt database: https://benlangmead.github.io/aws-indexes/k2
  prebuilt: "https://genome-idx.s3.amazonaws.com/kraken/k2_standard_20220607.tar.gz"
  classify_cmd: "--confidence 0.05" # use --confidence 0.05 for standard database 

q2blast:
  split_by_nseq: 20 # split by N sequence for parallel

##############################################################
# Build a de novo phylogenetic tree
# shortest amplified region in multi-primer PCR design
fprimer_max:
  338Fa: "ACWCCTACGGGWGGCAGCAG"
  338Fb: "GACTCCTACGGGAGGCWGCAG"
rprimer_min:
  1391R: "GACGGGCGGTGTGTRCA"

phylogeny:
  - FastTree # the first to be the final
  #- IQ-TREE
  #- RAxML

q2phylo:
  # supplementary parameters for q2_phylogen pipeline `align-to-tree-mafft-{fasttree, iqtree, raxml}`
  # https://docs.qiime2.org/2021.11/plugins/available/phylogeny/
  fasttree: ""
  iqtree: ""
  raxml: ""

##############################################################
# UMI extraction with seqkit and cutadapt
umi:
  seqkit:
    min_qual: 7
    min_len: 1000
    max_len: 1600
  # keep it loose for putative UMIs in tolerated error
  loc: 200 # robust location containing the adaptor-UMI-primer pattern, leaving only the start/end regions to find UMIs
  len: 15 # base length of UMI on 5' and 3' side. Their length shall be the same.
  # concatenated UMI regions on both sides, whitespaces will be trimmed automatically
  # use IUPAC code https://www.bioinformatics.org/sms/iupac.html
  pattern: "NNNNN NNNNN NNNNN NNNNN NNNNN NNNNN"
  # extract potential UMIs with cutadapt
  cutadapt: 
    max_errors: 0.2 # -e, high error tolerance 
    min_overlap: 8 # -O
  cl_identity: 0.9 # umi cluster similarity
  # keep it conservative for trusted UMI bins
  s: 90 # Check start of read up to s bp for validated UMIs.
  e: 90 # Check end of read up to f bp for validated UMIs.
  # params to filter umi bins, inherited from 
  # https://github.com/SorenKarst/longread_umi/blob/master/scripts/nanopore_pipeline.sh
  # https://github.com/SorenKarst/longread_umi/blob/master/scripts/umi_binning.sh
  u: 3.5 # UMI match error filter
  U: 30  # UMI match error SD filter
  O: 0.20 # Min read orientation fraction
  N: 10000 # Maximum number of reads +/-
  S: 10 # UMI bin size/UMI cluster size cutoff.
# linker and primer for umi extraction
flinker: "GTCTCGTGGGCTCGG"
rlinker: "GTCTCGTGGGCTCGG"

#########################################################################################
# in silico test with NanoSim
nanosim:
  min_id: 80,90,90,95,95,97,97,97,98,98,99
  max_id: 90,100,95,100,97,100,99,98,100,99,100
  min_len: -1 # -1 infinite 
  max_len: -1
  subsample_n: 10 # 1000 uniq sequences in ref
  simulator: 
    n: 50,100,200,400,600,800,1000,2000
    dna_type: linear
        