#!/bin/bash

#---------------------------------------------------------------------------------
# Real-time mode
# This script to start the snakemake workflow in a preset time terminals to achieve.
# It will call snakemake worflow and update the analysis with --forcerun $(snakemake --list-input-change)

# University of Copenhagen
# 2021/01/21
# Yan Hui
# huiyan@food.ku.dk
#---------------------------------------------------------------------------------

# Wrapped function, e.g. usage()
usage () {
    echo ""
    echo "Note: The real-time mode of snakemake workflow in analyzing nanopore amplicon sequencing."
    echo ""
    echo "Usage: $0 [-i -o -j -m -t -h]"
    echo "  -i, --input     Required, the directory path for basecalled fastqs."
    echo "  -o, --output    Required, define the output directory path."
    echo "  -j, --jobs      Optional, define the thread number for analysis. Integer, default: 8."
    echo "  -m, --mem_mb    Optional, define the maximum memory usage(MB). Integer, default: 50000."
    echo "  -t, --wait      Optional, waiting seconds to exit. Default, 1800, i.e. exit if no new fastq files upload within 30 mins."
    echo "  -h, --help      Optional, help message."   
    echo ""
    echo "Example:"
    echo "$0 -i /path/to/basecalled_fqs -o /path/to/results"
    echo "$0 -i /path/to/basecalled_fqs -o /path/to/results -j 30 -m 200000 -t 900"
    echo "";}

#############################################################################
# Check input, ensure alphabet/numbers behind -/--, and at least one option
if [ $# -eq 0 ] || ! [[ $* =~ ^(-|--)[a-z] ]]; then 
    echo "Invalid use: please check the help message below." ; usage; exit 1; fi
# Params loading
args=$(getopt --long "input:,output:,jobs::,mem_mb::,wait::,help" -o "i:o:j::m::t::h" -n "Input error" -- "$@")
# Ensure corrected input of params
if [ $? -ne 0 ]; then usage; exit 1; fi

eval set -- "$args"

while true; do
        case "$1" in
                -i|--input) INPUT="$2"; shift 2;;
                -o|--output) OUTPUT="$2"; shift 2;;
                -j|--jobs) JOBS="$2"; shift 2;;
                -m|--mem_mb) MEM_MB="$2"; shift 2;;
                -t|--wait) WAIT="$2"; shift 2;;
                -h|--help) usage; exit 1; shift 1;;
                *) break;;    
        esac
done
#############################################################################
# Paratermer initialization
if [ -z "$JOBS" ]; then
    JOBS=8
fi
if [ -z "$MEM_MB" ]; then
    MEM_MB=50000
fi
if [ -z "$WAIT" ]; then
    WAIT=1800
fi

# Check if the input directory exists
if [ ! -d "$INPUT" ]; then
    echo "The input directory does not exist. Please check if the input is a valid directory path."
    exit 1
fi

while true; do
    NUM_FQ1=$(ls "$INPUT" | wc -l)
    if [ "$NUM_FQ1" -eq 0 ]; then
        continue
    fi
    
    snakemake -p --use-conda -j "$JOBS" --resources mem_mb="$MEM_MB" --config basecalled_dir="$INPUT" results_dir="$OUTPUT" \
    --forcerun $(snakemake --list-input-changes --config basecalled_dir="$INPUT" results_dir="$OUTPUT")

    NUM_FQ2=$(ls "$INPUT" | wc -l)
    if [ "$NUM_FQ2" -eq "$NUM_FQ1" ]; then
        sleep "$WAIT"
        NUM_FQ2=$(ls "$INPUT" | wc -l)
        if [ "$NUM_FQ2" -eq "$NUM_FQ1" ]; then
            #rm -rf "$OUTPUT/demultiplexed_fq"
            break
        fi
    fi    
done