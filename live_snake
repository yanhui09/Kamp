#!/bin/bash

#---------------------------------------------------------------------------------
# Real-time mode
# This script to start the snakemake workflow in a preset time terminals to achieve.
# It will call snakemake worflow and update the analysis with --forcerun $(snakemake --list-input-change)

# University of Copenhagen
# 2021/01/21
# Yan Hui
# huiyan@food.ku.dk
#---------------------------------------------------------------------------------

# Wrapped function, e.g. usage()
usage () {
    echo ""
    echo "Note: The real-time mode of snakemake workflow in analyzing nanopore amplicon sequencing."
    cho ""
    echo "Usage: $0 [-m -h]"
    echo "  -i, --input     Required, the directory path for basecalled fastqs."
    echo "  -o, --output    Required, define the output directory path."
    echo "  -j, --jobs      Optional, define the thread number for analysis. Integer, default: 8."
    echo "  -m, --mem_mb    Optional, define the maximum memory usage(MB). Integer, default: 50000."
    echo "  -h, --help    Optional, Help message."   
    echo ""
    echo "Example:"
    echo "$0 -i ./basecalled_fqs -o ./results"
    echo "$0 -i ./basecalled_fqs -o ./results -j 30 -m 200000"
    echo "";}

#############################################################################
# Check input, ensure alphabet/numbers behind -/--, and at least one option
if [ $# -eq 0 ] || ! [[ $* =~ ^(-|--)[a-z] ]]; then 
    echo "Invalid use: please check the help message below." ; usage; exit 1; fi
# Params loading
args=$(getopt --long "input:,output:,jobs::,mem_mb::,help" -o "i:o:j::m::h" -n "Input error" -- "$@")
# Ensure corrected input of params
if [ $? -ne 0 ]; then usage; exit 1; fi

eval set -- "$args"

while true; do
        case "$1" in
                -i|--input) INPUT="$2"; shift 2;;
                -o|--output) OUTPUT="$2"; shift 2;;
                -j|--jobs) JOBS="$2"; shift 2;;
                -m|--mem_mb) MEM_MB="$2"; shift 2;;
                -h|--help) usage; exit 1; shift 1;;
                *) break;;    
        esac
done
#############################################################################

snakemake -p --use-conda -j "$JOBS" --resources mem_mb="$MEM_MB" \
--config basecalled_dir="$INPUT" results_dir="$OUTPUT"

snakemake -p --use-conda -j "$JOBS" --resources mem_mb="$MEM_MB" \
--config basecalled_dir="$INPUT" results_dir="$OUTPUT" \
--forcerun "$(snakemake --list-input-changes)"